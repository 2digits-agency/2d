name: 🛂 CI/CD

env:
  FORCE_COLOR: 1
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: ⚗️ Build packages
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: 🗃️ Checkout repository
        uses: actions/checkout@v3

      - name: 🏭 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: 🛸 Setup PNPM
        id: pnpm
        run: |
          npm install --global pnpm
          echo STORE_PATH="$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: ⏬ Download pnpm cache
        uses: actions/cache@v3
        timeout-minutes: 5
        id: cache-pnpm-store
        with:
          path: ${{ steps.pnpm.outputs.STORE_PATH }}
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-
            pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}

      - name: 🔧 Configure pnpm for quicker installation
        run: pnpm config --location=project set dedupe-peer-dependents=false

      - name: 📦 Install dependencies
        run: |
          pnpm install --filter "@2digits/*"
          pnpm install --ignore-scripts

      - name: 🏗️ Build all packages
        run: pnpm turbo run build

      - name: 🗄️ Cache build outputs
        uses: actions/cache@v3
        timeout-minutes: 5
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

  format:
    name: 🧬 Format files
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🏭 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: 🗄️ Restore cached build
        uses: actions/cache@v3
        timeout-minutes: 5
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: 🛸 Setup PNPM
        run: npm install --global pnpm

      - name: 🧬 Format files
        run: pnpm turbo run format

  test:
    name: 🧪 Run tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🏭 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: 🗄️ Restore cached build
        uses: actions/cache@v3
        timeout-minutes: 5
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: 🛸 Setup PNPM
        run: npm install --global pnpm

      - name: 🏗️ Build all packages
        run: pnpm turbo run build --force

      - name: 🧪 Run tests and benchmarks
        run: pnpm turbo run test bench

  types:
    name: 🩻 Check types
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🏭 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: 🗄️ Restore cached build
        uses: actions/cache@v3
        timeout-minutes: 5
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: 🛸 Setup PNPM
        run: npm install --global pnpm

      - name: 🩻 Check types
        run: pnpm turbo run types

  lint:
    name: 🔬 Lint files
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🏭 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: 🗄️ Restore cached build
        uses: actions/cache@v3
        timeout-minutes: 5
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: 🛸 Setup PNPM
        run: npm install --global pnpm

      - name: 🔬 Lint files
        run: pnpm turbo run lint

  changeset:
    name: 🦋 Check changesets
    runs-on: ubuntu-latest
    steps:
      - name: 🗃️ Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🛸 Setup PNPM
        uses: pnpm/action-setup@v2

      - name: 🏭 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: 🔧 Configure pnpm for quicker installation
        run: pnpm config --location=project set dedupe-peer-dependents=false

      - name: 📦 Install dependencies
        run: pnpm install --filter "@2digits/2d"

      - name: 🦋 Check changesets
        run: pnpm changeset status

  publish:
    name: 💠 Publish
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency: ${{ github.workflow }}-${{ github.ref }}
    needs: ['changeset', 'format', 'test', 'types', 'lint']
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: 🗃️ Checkout repository
        uses: actions/checkout@v3

      - name: 🛸 Setup PNPM
        uses: pnpm/action-setup@v2

      - name: 🏭 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: 🔧 Configure pnpm for quicker installation
        run: pnpm config --location=project set dedupe-peer-dependents=false

      - name: 📦 Install dependencies
        run: pnpm install --filter "@2digits/2d"

      - name: 🪄 Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: |
            pnpm install --filter "@2digits/*"
            pnpm turbo run build --force
            pnpm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
